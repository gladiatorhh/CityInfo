// <auto-generated />
using CityInfo.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CityInfo.Migrations
{
    [DbContext(typeof(CityInfoDbContext))]
    partial class CityInfoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("CityInfo.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "London is a very old an beautiful city",
                            Name = "London"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Paris is a very old an beautiful city",
                            Name = "Paris"
                        },
                        new
                        {
                            Id = 3,
                            Description = "NewYork is a very old an beautiful city",
                            Name = "NewYork"
                        });
                });

            modelBuilder.Entity("CityInfo.Entities.PointOfInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("PointsOfInterest");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Description = "This church belongs to first century",
                            Name = "The old church"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            Description = "This bridge belongs to first century",
                            Name = "The old bridge"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 1,
                            Description = "This Castle belongs to first century",
                            Name = "The old Castle"
                        });
                });

            modelBuilder.Entity("CityInfo.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Family = "Reza",
                            Name = "Ali",
                            Password = "ThisIsPass",
                            UserName = "AliReza"
                        },
                        new
                        {
                            Id = 2,
                            Family = "Haghighi",
                            Name = "Arian",
                            Password = "ThisIsPass",
                            UserName = "Gladiator"
                        },
                        new
                        {
                            Id = 3,
                            Family = "Chehry",
                            Name = "Sina",
                            Password = "ThisIsPass",
                            UserName = "SinaPro"
                        },
                        new
                        {
                            Id = 4,
                            Family = "Asadi",
                            Name = "Atefe",
                            Password = "ThisIsPass",
                            UserName = "Ati"
                        });
                });

            modelBuilder.Entity("CityInfo.Entities.PointOfInterest", b =>
                {
                    b.HasOne("CityInfo.Entities.City", "City")
                        .WithMany("PointsOfInterest")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("CityInfo.Entities.City", b =>
                {
                    b.Navigation("PointsOfInterest");
                });
#pragma warning restore 612, 618
        }
    }
}
